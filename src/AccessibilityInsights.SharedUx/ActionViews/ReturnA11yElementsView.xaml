<!-- Copyright (c) Microsoft. All rights reserved.
     Licensed under the MIT license. See LICENSE file in the project root for full license information.-->
<UserControl x:Class="AccessibilityInsights.SharedUx.ActionViews.ReturnA11yElementsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:AccessibilityInsights.SharedUx.ActionViews"
             xmlns:fabric="clr-namespace:AccessibilityInsights.CommonUxComponents.Controls;assembly=AccessibilityInsights.CommonUxComponents"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:controls="clr-namespace:AccessibilityInsights.SharedUx.Controls"
             xmlns:behaviors="clr-namespace:AccessibilityInsights.SharedUx.Behaviors"
             xmlns:Properties="clr-namespace:AccessibilityInsights.SharedUx.Properties"
             mc:Ignorable="d" 
             DataContext="{Binding RelativeSource={RelativeSource Self}}"
             d:DesignHeight="300" d:DesignWidth="300" IsVisibleChanged="UserControl_IsVisibleChanged">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="..\Resources\Styles.xaml"/>
                <ResourceDictionary>
                    <local:DynamicDataTemplateSelector x:Key="DynamicDataTemplateSelector" />
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="35"/>
            <RowDefinition Height="35"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <DataGrid Grid.Row="0"
                  x:Name="dgParams"
                  AutoGenerateColumns="False"
                  CanUserAddRows="False"
                  CanUserDeleteRows="False"
                  AutomationProperties.Name="{x:Static Properties:Resources.dgParamsAutomationPropertiesName}">
            <DataGrid.Resources>
                <DataTemplate x:Key="TextBoxTemplate">
                    <TextBox Text="{Binding ParamValue, Mode=OneWayToSource, UpdateSourceTrigger=PropertyChanged}"
                             IsReadOnly="False"
                             Grid.Column="1" VerticalContentAlignment="Center"
                             AutomationProperties.Name="{Binding Name}"
                             AutomationProperties.HelpText="{x:Static Properties:Resources.TextBoxAutomationPropertiesHelpText}"/>
                </DataTemplate>
                <DataTemplate x:Key="ComboBoxTemplate">
                    <ComboBox SelectedItem="{Binding ParamValue, Mode=OneWayToSource, UpdateSourceTrigger=PropertyChanged}" ItemsSource="{Binding ParamEnums}"/>
                </DataTemplate>
            </DataGrid.Resources>
            <DataGrid.Columns>
                <DataGridTemplateColumn Header="{x:Static Properties:Resources.DataGridTemplateColumnHeader}" Width="Auto">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Name}" Margin="0,0,5,0"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="{x:Static Properties:Resources.ReturnA11yElementsView_Value_Header}" Width="200" 
                    CellTemplateSelector="{StaticResource DynamicDataTemplateSelector}"/>
            </DataGrid.Columns>
        </DataGrid>
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="7*"/>
                <ColumnDefinition Width="3*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Label x:Name="lbDelay" Grid.Column="0" VerticalAlignment="Center" Content="{x:Static Properties:Resources.lbDelayContent}"/>
            <TextBox x:Name="tbDelay" Grid.Column="1"
                     Margin="5"
                     VerticalContentAlignment="Center"
                     Text="{x:Static Properties:Resources.ActionsDefaultDelayInSeconds}" AutomationProperties.LabeledBy="{Binding ElementName=lbDelay}"
                     PreviewTextInput="tbDelay_PreviewTextInput"/>
            <Button x:Name="btnAction" Grid.Column="2" Width="70" Content="{x:Static Properties:Resources.btnActionContent}"
                    AutomationProperties.Name="{x:Static Properties:Resources.btnActionAutomationPropertiesName}" Click="btnRun_Click"
                    Margin="5,5,0,5"/>
        </Grid>
        <Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Label x:Name="lbElements" Content="{x:Static Properties:Resources.lbElementsContent}"
                   VerticalAlignment="Center"/>
            <ComboBox x:Name="cbElements"
                      Margin="0,5,0,5"
                      Grid.Column="1" SelectionChanged="cbElements_SelectionChanged"
                      VerticalContentAlignment="Center"
                      AutomationProperties.LabeledBy="{Binding ElementName=lbElements}">
                <ComboBox.ItemContainerStyle>
                    <Style TargetType="{x:Type ComboBoxItem}">
                        <Setter Property="Content" Value="{Binding Path=Glimpse}"/>
                    </Style>
                </ComboBox.ItemContainerStyle>
            </ComboBox>
        </Grid>
        <Grid Grid.Row="4" Name="gdTab">
            <Grid.RowDefinitions>
                <RowDefinition Height="7*"/>
                <RowDefinition Height="3*"/>
            </Grid.RowDefinitions>
            <Expander Grid.Row="0" IsExpanded="True" Style="{StaticResource expAccordion}">
                <i:Interaction.Behaviors>
                    <behaviors:ExpanderBehavior/>
                </i:Interaction.Behaviors>
                <Expander.Header>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Label Grid.Column="0" Margin="4" Style="{StaticResource ResourceKey=lblAccordionHeader}" Target="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type ToggleButton}}}">Properties</Label>
                        <Button x:Name="btnSetting" Grid.Column="2"
                                        BorderThickness="0"  HorizontalAlignment="Right" VerticalAlignment="Center" VerticalContentAlignment="Center"
                                        Height="22" Width="22" Padding="0"
                                        Style="{StaticResource BtnStandard}"
                                        AutomationProperties.Name="{x:Static Properties:Resources.btnSettingAutomationPropertiesName}">
                            <i:Interaction.Behaviors>
                                <behaviors:DropDownButtonBehavior/>
                            </i:Interaction.Behaviors>
                            <fabric:FabricIconControl GlyphName="Settings" GlyphSize="Custom" FontSize="12" HorizontalAlignment="Center" VerticalAlignment="Center" Style="{StaticResource hoverAwareFabricIconOnButtonParent}"/>
                            <Button.ContextMenu>
                                <ContextMenu AutomationProperties.Name="{x:Static Properties:Resources.btnSettingAutomationPropertiesName}" Style="{StaticResource menuPlainWhite}">
                                    <MenuItem Header="{x:Static Properties:Resources.ReturnA11yElementsView_Menu_ShowAllPropertiesWithValues}" x:Name="mniShowCoreProps" IsCheckable="true" 
                                    Background="White" Checked="mniShowCoreProps_Checked" Unchecked="mniShowCoreProps_Unchecked" Loaded="mniShowCoreProps_Loaded"/>
                                    <MenuItem Header="{x:Static Properties:Resources.ReturnA11yElementsView_Menu_ConfigurePropertiesToAlwaysShow}" x:Name="mniIncludeAllProps" Click="mniIncludeAllProps_Click"
                                    Background="White"/>
                                </ContextMenu>
                            </Button.ContextMenu>
                        </Button>
                    </Grid>
                </Expander.Header>
                <Grid x:Name="gridProperties" VerticalAlignment="Stretch" Grid.ColumnSpan="2" Margin="0,0,0.333,0">
                    <controls:PropertyInfoControl x:Name="ctrlProperties" Margin="8" KeyboardNavigation.TabNavigation="Local"/>
                </Grid>
            </Expander>
            <GridSplitter x:Name="gsProperties"
                                  Grid.Row="0" Style="{StaticResource gsStyle}"
                                  ResizeBehavior="CurrentAndNext"
                                  AutomationProperties.Name="{x:Static Properties:Resources.gsPropertiesAutomationPropertiesName}"
                                  Grid.ColumnSpan="2"/>
            <Expander Grid.Row="1" IsExpanded="True" Style="{StaticResource expAccordion}">
                <i:Interaction.Behaviors>
                    <behaviors:ExpanderBehavior/>
                </i:Interaction.Behaviors>
                <Expander.Header>
                    <Label  Margin="4" Style="{StaticResource ResourceKey=lblAccordionHeader}" x:Name="labelFixFollowing" Content="{x:Static Properties:Resources.labelFixFollowingContent}"/>
                </Expander.Header>
                <Grid x:Name="gridPatterns" VerticalAlignment="Stretch" Grid.ColumnSpan="2">
                    <controls:PatternInfoControl x:Name="ctrlPatterns" Margin="0,4" KeyboardNavigation.TabNavigation="Local"/>
                </Grid>
            </Expander>
        </Grid>
        <TextBlock x:Name="tbResult" Focusable="True"
                   Grid.Row="3"
                   Margin="10,0,0,0"
                   VerticalAlignment="Top"
                   AutomationProperties.Name="{x:Static Properties:Resources.tbResultAutomationPropertiesName}"/>
        <controls:DisplayCountControl x:Name="ctrlCountDown"
                                      Grid.Row="3"
                                      Visibility="Collapsed"/>
    </Grid>
</UserControl>
