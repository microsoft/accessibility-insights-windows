<!-- Copyright (c) Microsoft. All rights reserved.
     Licensed under the MIT license. See LICENSE file in the project root for full license information.-->
<UserControl x:Class="AccessibilityInsights.SharedUx.Controls.EventConfigTabControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:converters="clr-namespace:AccessibilityInsights.SharedUx.Converters"
             xmlns:local="clr-namespace:AccessibilityInsights.SharedUx.Controls"
             xmlns:cc="clr-namespace:AccessibilityInsights.SharedUx.Controls.CustomControls"
             xmlns:vm="clr-namespace:AccessibilityInsights.SharedUx.ViewModels"
             xmlns:fabric="clr-namespace:AccessibilityInsights.CommonUxComponents.Controls;assembly=AccessibilityInsights.CommonUxComponents"
             xmlns:Properties="clr-namespace:AccessibilityInsights.SharedUx.Properties"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="310"
             AutomationProperties.Name="{x:Static Properties:Resources.EventConfigTabControlAutomationName}">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="..\Resources\Styles.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <converters:TreeNodeToMarginConverter x:Key="nodeMargin"></converters:TreeNodeToMarginConverter>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Border Margin="-1,0" Grid.Row="0" Grid.Column="0" BorderBrush="{DynamicResource ResourceKey=GenericBorderBrush}" BorderThickness="0,0,0,1" >
            <Grid Margin="8,2,8,10">
                <Grid.RowDefinitions>
                    <RowDefinition Height="30"/>
                </Grid.RowDefinitions>
                <TextBlock Grid.Row="0" 
                           x:Name="tbElement" 
                           VerticalAlignment="Center" 
                           FontSize="20" FontWeight="Bold" TextWrapping="Wrap"
                           TextTrimming="CharacterEllipsis"
                           Height="30"
                           Style="{StaticResource TbFocusable}"
                           AutomationProperties.HelpText="{x:Static Properties:Resources.tbElementAutomationPropertiesHelpText}"/>
            </Grid>
        </Border>
        <Label Grid.Row="1" FontSize="11" Content="{x:Static Properties:Resources.EventConfigTabControl_SelectEvents}" Margin="8,8,4,4" Padding="0" FontWeight="SemiBold" Foreground="{DynamicResource ResourceKey=PrimaryFGBrush}"/>
        <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" Grid.Row="2">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <cc:CheckableTreeView Grid.Row="0" x:Name="trviewConfigEvents" BorderThickness="0" AutomationProperties.Name="{x:Static Properties:Resources.trviewConfigEventsAutomationPropertiesName}" Margin="2"
                          ScrollViewer.CanContentScroll="False" FocusVisualStyle="{DynamicResource {x:Static SystemParameters.FocusVisualStyleKey}}">
                    <TreeView.Resources>
                        <Style TargetType="cc:CheckableTreeView">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="TreeView">
                                        <ItemsPresenter />
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                        <HierarchicalDataTemplate
                    DataType="{x:Type vm:EventConfigNodeViewModel}"
                     ItemsSource="{Binding Children}">
                            <StackPanel VerticalAlignment="Center" Orientation="Horizontal">
                                <CheckBox VerticalAlignment="Center" Visibility="{Binding TextVisibility}" IsThreeState="{Binding IsThreeState}" IsChecked="{Binding IsChecked}" Margin="0,0,4,0" IsEnabled="{Binding IsEditEnabled}" IsTabStop="False" AutomationProperties.LabeledBy="{Binding ElementName=tbNode}" Style="{StaticResource CheckBoxContastingBorder}" Foreground="{DynamicResource ResourceKey=PrimaryFGBrush}"/>
                                <TextBlock Name="tbNode" VerticalAlignment="Center" Text="{Binding Header}" Visibility="{Binding TextVisibility}" Margin="0,0,4,0" FontSize="11"/>
                                <Button VerticalAlignment="Center" Visibility="{Binding ButtonVisibility}" Name="btnConfig" Click="btnConfig_Click" IsEnabled="{Binding IsEditEnabled}" Background="Transparent" BorderThickness="0"
                                    AutomationProperties.HelpText="{x:Static Properties:Resources.btnConfigAutomationPropertiesHelpText}">
                                    <TextBlock TextDecorations="Underline" Foreground="{DynamicResource ResourceKey=ButtonLinkFGBrush}" Text="{Binding ButtonText}" FontSize="11"/>
                                </Button>
                            </StackPanel>
                        </HierarchicalDataTemplate>
                    </TreeView.Resources>
                    <TreeView.ItemContainerStyle>
                        <Style TargetType="TreeViewItem" BasedOn="{StaticResource ResourceKey=tviStandard}">
                            <Setter Property="IsExpanded" Value="{Binding Path=IsExpanded, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            <EventSetter Event="KeyDown" Handler="TreeViewItem_KeyDown"/>
                        </Style>
                    </TreeView.ItemContainerStyle>
                </cc:CheckableTreeView>
                <CheckBox Grid.Row="1" Content="{x:Static Properties:Resources.EventConfigTabControl_ckbxAllEvents}"
                          Margin="27,2" FontSize="11" Name="ckbxAllEvents" Foreground="{DynamicResource ResourceKey=PrimaryFGBrush}"
                          Checked="ckbxAllEvents_Checked" Unchecked="ckbxAllEvents_Unchecked" Style="{StaticResource CheckBoxContastingBorder}"
                          FocusVisualStyle="{DynamicResource {x:Static SystemParameters.FocusVisualStyleKey}}"/>
            </Grid>
        </ScrollViewer>
    </Grid>
</UserControl>
