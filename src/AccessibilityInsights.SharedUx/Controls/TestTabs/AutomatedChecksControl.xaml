<!-- Copyright (c) Microsoft. All rights reserved.
     Licensed under the MIT license. See LICENSE file in the project root for full license information.-->
<UserControl x:Class="AccessibilityInsights.SharedUx.Controls.TestTabs.AutomatedChecksControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:fabric="clr-namespace:AccessibilityInsights.CommonUxComponents.Controls;assembly=AccessibilityInsights.CommonUxComponents"
             xmlns:local="clr-namespace:AccessibilityInsights.SharedUx.Controls.CustomControls"
             xmlns:Properties="clr-namespace:AccessibilityInsights.SharedUx.Properties"
             mc:Ignorable="d"
             AutomationProperties.Name="{x:Static Properties:Resources.AutomatedChecksControlAutomationName}"
             IsVisibleChanged="UserControl_IsVisibleChanged">
    <UserControl.Resources>
        <ResourceDictionary Source="..\..\Resources\Styles.xaml"/>
    </UserControl.Resources>
    <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Disabled" Name="scrollview" SizeChanged="scrollview_SizeChanged">
        <Grid Width="Auto" Margin="16,0,0,0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid Grid.Row="0" Background="Transparent">
                <Grid.RowDefinitions>
                    <RowDefinition Height="12"/>
                    <RowDefinition Height="28"/>
                    <RowDefinition Height="16"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="8"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <TextBlock Name="tbGlimpse" TextTrimming="CharacterEllipsis" Grid.Row="1" Grid.Column="0" VerticalAlignment="Top" Style="{StaticResource tbHeaderDark}"/>
                <Label Name="lblTitle" Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" Content="{x:Static Properties:Resources.lblTitleContent}" VerticalAlignment="Top" Style="{StaticResource lblHeader3}"/>
                <Button Grid.Column="1"  Grid.Row="1" Margin="8,0" Style="{StaticResource BtnNoHoverColor}" 
                        Foreground="{DynamicResource ResourceKey=ActiveBlueBrush}" HorizontalAlignment="Right"
                        VerticalAlignment="Top" Name="btnTree" Click="btnTree_Click"
                        AutomationProperties.Name="{Binding ElementName=tbViewResults,Path=Text}"
                        AutomationProperties.AutomationId="{x:Static Properties:AutomationIDs.AutomatedChecksUIATreeButton}">
                    <StackPanel Orientation="Horizontal">
                        <fabric:FabricIconControl GlyphName="DOM" FontSize="14" Foreground="{DynamicResource ResourceKey=ButtonLinkFGBrush}" Margin="0,0,4,0" ShowInControlView="False"/>
                        <TextBlock Name="tbViewResults" Text="{x:Static Properties:Resources.tbViewResultsText}" Style="{StaticResource tbLink}" Focusable="False"/>
                    </StackPanel>
                </Button>
                <Grid Visibility="Collapsed" Name="gdFailures" Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2" >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="16"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <fabric:FabricIconControl VerticalAlignment="Center" HorizontalAlignment="Left"  Grid.Column="0"  GlyphName="AlertSolid" Foreground="{DynamicResource ResourceKey=HLbrushRed}" GlyphSize="Custom" FontSize="14"/>
                    <TextBlock Name="tbSubTitle" Grid.Column="1" VerticalAlignment="Center" Style="{StaticResource tbRowStyle}"
                               TextWrapping="Wrap" MinWidth="300" HorizontalAlignment="Left" Margin="0,2,-0.333,4"
                               AutomationProperties.AutomationId="{x:Static Properties:AutomationIDs.AutomatedChecksResultsTextBlock}">
                        <Run Name="runFailures" Text="{x:Static Properties:Resources.runFailuresTextOneFailure}"/>
                        <Run Text="{x:Static Properties:Resources.AutomatedChecksControl_tbSubtitleRun}"/>
                    </TextBlock>
                </Grid>
            </Grid>
            <Border Grid.Row="1" BorderBrush="{DynamicResource ResourceKey=TabBorderBrush}" BorderThickness="0,1,0,0" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                <ListView AutomationProperties.LabeledBy="{Binding ElementName=lblTitle}" KeyboardNavigation.TabNavigation="Once"
                          Name="lvResults" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" BorderThickness="0"
                          AutomationProperties.AutomationId="{x:Static Properties:AutomationIDs.AutomatedChecksResultsListView}" Background="Transparent">
                    <ListView.View>
                        <GridView x:Name="gv">
                            <GridViewColumn Width="26" DisplayMemberBinding="{x:Null}">
                                <local:CustomGridViewColumnHeader Style="{StaticResource gvchAutomatedChecks}" Margin="-5,0,0,0" AutomationProperties.Name="{x:Static Properties:Resources.localCustomGridViewColumnHeaderAutomationPropertiesName}" MinWidth="28" MaxWidth="28" Tag="false" Focusable="True">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="17"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <CheckBox Grid.Column="0" VerticalAlignment="Center" Name="chbxSelectAll" Click="chbxSelectAll_Click" AutomationProperties.Name="{x:Static Properties:Resources.chbxSelectAllAutomationPropertiesName}" IsEnabled="True" Style="{StaticResource CheckBoxContastingBorder}"/>
                                        <Button Grid.Column="1" Name="btnExpandAll" Margin="0,-2,0,0" HorizontalAlignment="Left"
                                                Style="{StaticResource BtnStandard}" Width="8" Height="8" Padding="0"
                                                BorderThickness="0" Click="btnExpandAll_Click" IsHitTestVisible="True"
                                                AutomationProperties.Name="{x:Static Properties:Resources.btnExpandAllAutomationPropertiesName}"
                                                AutomationProperties.AutomationId="{x:Static Properties:AutomationIDs.AutomatedChecksExpandAllButton}">
                                            <Grid>
                                                <AccessText Text="_c" Opacity="0"/>
                                                <fabric:FabricIconControl x:Name="fabicnExpandAll" GlyphName="CaretSolidRight" GlyphSize="Custom" FontSize="8" VerticalAlignment="Center" HorizontalAlignment="Center" Style="{StaticResource hoverAwareFabricIconOnButtonParent}" Margin="0,2,0,-2"/>
                                            </Grid>
                                        </Button>
                                    </Grid>
                                </local:CustomGridViewColumnHeader>
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <CheckBox Name="chbxRow" Focusable="True" IsTabStop="False" AutomationProperties.Name="{x:Static Properties:Resources.chbxRowAutomationPropertiesName}" Margin="0.5,0,-2,0" >
                                            <CheckBox.Style>
                                                <Style TargetType="CheckBox" BasedOn="{StaticResource CheckBoxContastingBorder}">
                                                    <Style.Setters>
                                                        <Setter Property="IsEnabled" Value="{Binding Path=ScreenshotAvailable, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"/>
                                                    </Style.Setters>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}}" Value="False">
                                                            <Setter Property="IsChecked" Value="False"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}}" Value="True">
                                                            <Setter Property="IsChecked" Value="{Binding Path=IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListViewItem}}}"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </CheckBox.Style>
                                        </CheckBox>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn x:Name="gvcElement" Width="Auto">
                                <local:CustomGridViewColumnHeader Style="{StaticResource gvchAutomatedChecks}" Focusable="True" SizeChanged="CustomGridViewColumnHeader_SizeChanged">
                                    <Label Content="{x:Static Properties:Resources.AutomatedChecksControl_ElementPath}" VerticalAlignment="Center" Style="{StaticResource lblFaint}"/>
                                </local:CustomGridViewColumnHeader>
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <Button Margin="4,0,20,0" Grid.Column="1" Click="ButtonElem_Click" ToolTip="{Binding Element.Glimpse, IsAsync=True}" Tag="{Binding Element, IsAsync=True}" 
                                                Content="{Binding Element.Glimpse}" IsTabStop="False" Focusable="True" Style="{StaticResource btnLink}"
                                                AutomationProperties.Name="{Binding Element.Glimpse, StringFormat='{x:Static Properties:Resources.ButtonAutomationPropertiesNameInspectDetails}'}"/>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn Width="Auto">
                                <local:CustomGridViewColumnHeader Style="{StaticResource gvchAutomatedChecks}" Focusable="True">
                                    <Label Visibility="{Binding BugColumnVisibility}" Content="{x:Static Properties:Resources.AutomatedChecksControl_Issue}" VerticalAlignment="Center" Style="{StaticResource lblFaint}"/>
                                </local:CustomGridViewColumnHeader>
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal" MinWidth="150">
                                            <fabric:FabricIconControl GlyphName="LadybugSolid" GlyphSize="Custom" FontSize="15" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource ResourceKey=BlueButtonBGBrush}" Margin="0,0,4,0" Visibility="{Binding Path=FileBugVisibility}" ShowInControlView="False"/>
                                            <Button Visibility="{Binding FileBugVisibility}" VerticalAlignment="Center" Tag="{Binding}"
                                                Style="{StaticResource btnLink}" Name="btnFileBug" Click="btnFileBug_Click"
                                                Content="{Binding IssueDisplayText, TargetNullValue='{x:Static Properties:Resources.btnFileIssueContent}'}"
                                                Focusable="True" IsTabStop="False" IsVisibleChanged="btnFileBug_IsVisibleChanged"
                                                AutomationProperties.HelpText="{Binding Path=Element.Glimpse, StringFormat='{x:Static Properties:Resources.btnFileBugAutomationPropertiesHelpText}'}"
                                                AutomationProperties.Name="{Binding Path=IssueDisplayText, StringFormat='{x:Static Properties:Resources.btnFileBugAutomationPropertiesName}', TargetNullValue='{x:Static Properties:Resources.btnFileIssueContent}'}">
                                            </Button>
                                            <fabric:FabricIconControl x:Name="progressIcon"  GlyphName="ProgressRingDots" 
                                                                      Foreground="LightGray" RenderTransformOrigin="0.5, 0.5"
                                                                      Visibility="{Binding LoadingVisibility}" Margin="4,0,0,0">>
                                                <fabric:FabricIconControl.RenderTransform>
                                                    <RotateTransform Angle="0"/>
                                                </fabric:FabricIconControl.RenderTransform>
                                                <fabric:FabricIconControl.Triggers>
                                                    <EventTrigger RoutedEvent="Loaded">
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <DoubleAnimation To="360" Duration="0:0:2" RepeatBehavior="Forever" 
                                                                 Storyboard.TargetProperty="(fabric:FabricIconControl.RenderTransform).(RotateTransform.Angle)"/>
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </EventTrigger>
                                                </fabric:FabricIconControl.Triggers>
                                            </fabric:FabricIconControl>
                                        </StackPanel>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn Width="Auto">
                                <local:CustomGridViewColumnHeader Style="{StaticResource gvchAutomatedChecks}" Focusable="True">
                                    <Label Visibility="{Binding BugColumnVisibility}" Content="{x:Static Properties:Resources.AutomatedChecksControl_RuleSourceLabel}" VerticalAlignment="Center" Style="{StaticResource lblFaint}"/>
                                </local:CustomGridViewColumnHeader>
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <Button VerticalAlignment="Center" Tag="{Binding}" MinWidth="200"
                                                Style="{StaticResource btnLink}" Name="btnSourceLink" Click="btnSourceLink_Click"
                                                Content="{Binding Path=Source}"
                                                Focusable="True" IsTabStop="False" 
                                                AutomationProperties.HelpText="{x:Static Properties:Resources.AutomatedChecksControl_RuleSourceHelpText}"
                                                AutomationProperties.Name="{Binding Path=Source}">
                                        </Button>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                        </GridView>
                    </ListView.View>
                    <ListView.ItemContainerStyle>
                        <Style TargetType="{x:Type ListViewItem}">
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource ResourceKey=ACRowHoverBGBrush}"/>
                                </Trigger>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource ResourceKey=SelectedACRowBGBrush}"/>
                                </Trigger>
                                <Trigger Property="IsFocused" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource ResourceKey=SelectedACRowBGBrush}"/>
                                    <Setter Property="BorderBrush" Value="{DynamicResource ResourceKey=IconBrush}"/>
                                </Trigger>
                            </Style.Triggers>
                            <Setter Property="BorderThickness" Value="1"/>
                            <Setter Property="Height" Value="23"/>
                            <Setter Property="Margin" Value="-18,0,0,0"/>
                            <Setter Property="IsTabStop" Value="True"/>
                            <Setter Property="KeyboardNavigation.TabNavigation" Value="Once"/>
                            <Setter Property="AutomationProperties.HelpText" Value="{x:Static Properties:Resources.lvResultsHelpText}"/>
                            <EventSetter Event="PreviewKeyDown" Handler="lviResults_PreviewKeyDown"/>
                            <EventSetter Event="Unselected" Handler="ListViewItem_Unselected"/>
                            <EventSetter Event="Selected" Handler="ListViewItem_Selected"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                                        <Grid>
                                            <Border BorderBrush="{DynamicResource ResourceKey=WindowBorderBrush}" BorderThickness="0,1,0,0"/>
                                            <Border BorderBrush="{TemplateBinding BorderBrush}"
                                                         BorderThickness="{TemplateBinding BorderThickness}"
                                                         Background="{TemplateBinding Background}">
                                                <GridViewRowPresenter HorizontalAlignment="Stretch" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="-7,0,0,0" Width="Auto" Content="{TemplateBinding Content}"/>
                                            </Border>
                                        </Grid>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListView.ItemContainerStyle>
                    <ListView.Resources>
                        <Style TargetType="CheckBox">
                            <Style.Setters>
                                <Setter Property="IsEnabled" Value="{Binding Path=ScreenshotAvailable, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"/>
                            </Style.Setters>
                        </Style>
                        <Style TargetType="{x:Type local:CustomExpander}">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                            <Setter Property="BorderBrush" Value="Transparent"/>
                            <Setter Property="BorderThickness" Value="1"/>
                            <Setter Property="KeyboardNavigation.TabNavigation" Value="Once"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Expander}">
                                        <Border Background="{TemplateBinding Background}">
                                            <DockPanel>
                                                <CheckBox Margin="0,5,2,0" Tag="tag" Focusable="True" IsTabStop="False" Click="CheckBox_Click" AutomationProperties.Name="{x:Static Properties:Resources.lvResultsCheckBoxAutomationPropertiesName}" Style="{StaticResource CheckBoxContastingBorder}"/>
                                                <ToggleButton x:Name="HeaderSite" IsTabStop="False" ContentTemplate="{TemplateBinding HeaderTemplate}" ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" 
                                                              Content="{TemplateBinding Header}" DockPanel.Dock="Top" Foreground="{TemplateBinding Foreground}" 
                                                              FontWeight="{TemplateBinding FontWeight}" FontStyle="{TemplateBinding FontStyle}" FontStretch="{TemplateBinding FontStretch}" 
                                                              FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                              IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                                              Margin="0,1" MinWidth="0" MinHeight="0" 
                                                              Padding="{TemplateBinding Padding}" Style="{StaticResource tgbutton}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                <ContentPresenter x:Name="ExpandSite" DockPanel.Dock="Bottom" Focusable="false" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="0" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                            </DockPanel>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsExpanded" Value="true">
                                                <Setter Property="Visibility" TargetName="ExpandSite" Value="Visible"/>
                                            </Trigger>
                                            <Trigger Property="IsEnabled" Value="false">
                                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                        <Style TargetType="GridViewColumnHeader">
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource ResourceKey=TabBorderBrush}"/>
                            <Setter Property="Margin" Value="0,-1,-1,0"/>
                        </Style>
                    </ListView.Resources>
                    <ListView.GroupStyle>
                        <GroupStyle>
                            <GroupStyle.ContainerStyle>
                                <Style TargetType="{x:Type GroupItem}">
                                    <Setter Property="KeyboardNavigation.TabNavigation" Value="Local"/>
                                    <Setter Property="KeyboardNavigation.DirectionalNavigation" Value="Local"/>
                                    <Setter Property="Focusable" Value="True"/>
                                    <EventSetter Event="PreviewKeyDown" Handler="GroupItem_PreviewKeyDown"/>
                                    <Setter Property="AutomationProperties.Name">
                                        <Setter.Value>
                                            <MultiBinding StringFormat="{x:Static Properties:Resources.lvResultsListViewAutomationPropertiesName}">
                                                <Binding Path="Items[0].Description"/>
                                                <Binding Path="ItemCount"/>
                                                <Binding Path="Tag" RelativeSource="{RelativeSource Self}"/>
                                            </MultiBinding>
                                        </Setter.Value>
                                </Setter>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate>
                                                <local:CustomExpander x:Name="expander" IsExpanded="False" KeyboardNavigation.DirectionalNavigation="Local" 
                                                          RequestBringIntoView="Expander_RequestBringIntoView" Collapsed="Expander_Collapsed" Foreground="{DynamicResource ResourceKey=PrimaryFGBrush}">
                                                    <local:CustomExpander.Header>
                                                        <StackPanel Focusable="False" Orientation="Horizontal" Height="20">
                                                            <Label Content="{Binding Path=Items[0].Description}" Style="{StaticResource lblRowStyle}" VerticalAlignment="Center" />
                                                            <Label Content="{x:Static Properties:Resources.AutomatedChecksControl_OpenParenthesis}" Style="{StaticResource lblRowStyle}" Margin="4,0,0,0" VerticalAlignment="Center" />
                                                            <fabric:FabricIconControl VerticalAlignment="Bottom" Margin="1,2" GlyphName="{Binding Path=Items[0].GlyphName}" Foreground="{DynamicResource ResourceKey=HLbrushRed}" GlyphSize="Custom" FontSize="14"/>
                                                            <Label Content="{Binding ItemCount}" Style="{StaticResource lblRowStyle}" VerticalAlignment="Center" />
                                                            <Label Content="{x:Static Properties:Resources.AutomatedChecksControl_CloseParenthesis}" Style="{StaticResource lblRowStyle}"  VerticalAlignment="Center" />
                                                        </StackPanel>
                                                    </local:CustomExpander.Header>
                                                    <ItemsPresenter/>
                                                </local:CustomExpander>
                                                <ControlTemplate.Triggers>
                                                    <Trigger SourceName="expander" Property="IsExpanded" Value="True">
                                                        <Setter Property="AutomationProperties.HelpText" Value="{x:Static Properties:Resources.lvResultsListViewHelpTextExpanded}"/>
                                                    </Trigger>
                                                    <Trigger SourceName="expander" Property="IsExpanded" Value="False">
                                                        <Setter Property="AutomationProperties.HelpText" Value="{x:Static Properties:Resources.lvResultsListViewHelpTextCollapsed}"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </GroupStyle.ContainerStyle>
                        </GroupStyle>
                    </ListView.GroupStyle>
                </ListView>
            </Border>
            <Label Grid.Row="1" Name="lblCongrats" Visibility="Collapsed" Content="{x:Static Properties:Resources.lblCongratsContent}" HorizontalAlignment="Center"  Width="Auto" Style="{StaticResource lblHeader2}" Padding="0,32,0,0" />
            <TextBlock Grid.Row="1" Name="lblNoFail" Visibility="Collapsed" Text="{x:Static Properties:Resources.lblNoFailText}"  Style="{StaticResource tbHeaderDark}" TextWrapping="Wrap" Width="214" HorizontalAlignment="Center" TextAlignment="Center" Padding="0,49,0,0" />
        </Grid>
    </ScrollViewer>
</UserControl>
