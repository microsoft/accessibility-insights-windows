<!-- Copyright (c) Microsoft. All rights reserved.
     Licensed under the MIT license. See LICENSE file in the project root for full license information.-->
<UserControl x:Class="AccessibilityInsights.SharedUx.Controls.HierarchyControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:controls="clr-namespace:AccessibilityInsights.CommonUxComponents.Controls;assembly=AccessibilityInsights.CommonUxComponents"
             xmlns:behaviors="clr-namespace:AccessibilityInsights.SharedUx.Behaviors"
             xmlns:local="clr-namespace:AccessibilityInsights.SharedUx.Controls"
             xmlns:cc="clr-namespace:AccessibilityInsights.SharedUx.Controls.CustomControls"
             xmlns:converters="clr-namespace:AccessibilityInsights.SharedUx.Converters"
             xmlns:Properties="clr-namespace:AccessibilityInsights.SharedUx.Properties"
             mc:Ignorable="d"
             d:DesignHeight="300" d:DesignWidth="310"
             DataContext="{Binding RelativeSource={RelativeSource Self}}"
             AutomationProperties.Name="{x:Static Properties:Resources.HierarchyControlAutomationPropertiesName}">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="..\Resources\Styles.xaml"/>
                <ResourceDictionary>
                    <ContextMenu x:Key="ExpandDescendantsPopup" x:Name="ctxMenu" Style="{StaticResource menuPlainWhite}">
                        <MenuItem IsCheckable="False" Click="MenuItem_Click">
                            <MenuItem.Style>
                                <Style TargetType="MenuItem" BasedOn="{StaticResource miFabIcon}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=NeedSnapshot, Mode=OneWay}" Value="true">
                                            <Setter Property="Header" Value="{x:Static Properties:Resources.SetterValueTest}"/>
                                            <Setter Property="Tag" Value="TestBeaker"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=NeedSnapshot, Mode=OneWay}" Value="false">
                                            <Setter Property="Header" Value="{x:Static Properties:Resources.SetterValueExpandAllDescendants}"/>
                                            <Setter Property="Tag" Value="DOM"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </MenuItem.Style>
                        </MenuItem>
                        <MenuItem IsCheckable="False" Click="mniFileBug_Click" 
                                  Header="{Binding Path=IssueDisplayText, TargetNullValue='{x:Static Properties:Resources.MenuItemHeaderNewIssue}'}" 
                                  AutomationProperties.Name="{Binding StringFormat='{}Bug {0}',Path=IssueDisplayText, TargetNullValue='{x:Static Properties:Resources.MenuItemAutomationPropertiesName}'}"
                                  Visibility="{Binding FileBugVisibility}"
                                  Tag="LadybugSolid">
                            <MenuItem.Style>
                                <Style TargetType="MenuItem" BasedOn="{StaticResource miFabIcon}">
                                    <Setter Property="MenuItem.HeaderStringFormat" Value="{x:Static Properties:Resources.SetterValueBug}"/>
                                    <Setter Property="Tag" Value="LadyBugSolid"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=NeedSnapshot, Mode=OneWay}" Value="true">
                                            <Setter Property="MenuItem.Visibility" Value="Collapsed"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=NeedSnapshot, Mode=OneWay}" Value="false">
                                            <Setter Property="MenuItem.Visibility" Value="Visible"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=IssueDisplayText, Mode=OneWay}" Value="{x:Null}">
                                            <Setter Property="MenuItem.HeaderStringFormat" Value="{x:Null}"/>
                                            <Setter Property="Tag" Value="LadybugSolid"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </MenuItem.Style>
                        </MenuItem>
                    </ContextMenu>
                    <ContextMenu x:Key="cmLive" FlowDirection="LeftToRight" Style="{StaticResource menuPlainWhite}">
                        <MenuItem Tag="LightningBolt" IsCheckable="False" Header="{x:Static Properties:Resources.MenuItemHeaderListenToEvents}" Click="mniEvents_Click"/>
                        <MenuItem Tag="LadybugSolid" Visibility ="{Binding FileBugVisibility}" IsCheckable="False" Header="{x:Static Properties:Resources.MenuItemHeaderNewIssue}" Click="mniFileBugLive_Click"/>
                    </ContextMenu>
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
            <converters:TreeNodeToMarginConverter x:Key="nodeMargin"></converters:TreeNodeToMarginConverter>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid KeyboardNavigation.DirectionalNavigation="Contained">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid Grid.Row="1"  Margin="0,0,0,5">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Border Height="24" Margin="8,5,8,5" Background="{DynamicResource ResourceKey=SearchPanelBGBrush}" BorderBrush="{DynamicResource ResourceKey=SearchPanelBorderBrush}" BorderThickness="{DynamicResource ResourceKey=SearchPanelBorderThickness}">
                <DockPanel>
                    <controls:FabricIconControl DockPanel.Dock="Left" Margin="5,0,5,0" GlyphName="Search" FontSize="{StaticResource ConstStandardTextSize}" GlyphSize="Custom" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource ResourceKey=IconBrush}" ShowInControlView="False"/>
                    <controls:PlaceholderTextBox x:Name="textboxSearch" TextChanged="textboxSearch_TextChanged"
                        AutomationProperties.Name="{x:Static Properties:Resources.HierarchyControl_textboxSearchAutomationName}"
                        Height="24" HorizontalAlignment="Stretch" VerticalContentAlignment="Center"
                        AutomationProperties.HelpText="{Binding SearchBoxHelpText, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:HierarchyControl}}"
                        BorderThickness="{DynamicResource ResourceKey=BtnBrdrThickness}">
                        <controls:PlaceholderTextBox.Style>
                            <Style TargetType="{x:Type controls:PlaceholderTextBox}" BasedOn="{StaticResource ResourceKey=PlaceholderTextBox}">
                                <Setter Property="Foreground" Value="{DynamicResource ResourceKey=PrimaryFGBrush}"/>
                                <Setter Property="CaretBrush" Value="{DynamicResource ResourceKey=PrimaryFGBrush}"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsLiveMode, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:HierarchyControl}}" Value="False">
                                        <Setter Property="Placeholder" Value="{x:Static Properties:Resources.SetterValueSearchByString}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsLiveMode, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:HierarchyControl}}" Value="True">
                                        <Setter Property="Placeholder" Value="{x:Static Properties:Resources.SetterValueSearchByName}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Text, ElementName=textboxSearch}" Value="">
                                        <Setter Property="Foreground" Value="{DynamicResource ResourceKey=SearchPlaceholderFGBrush}"/>
                                        <Setter Property="Visibility" Value="Visible"/>
                                        <Setter Property="FontStyle" Value="Italic"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </controls:PlaceholderTextBox.Style>
                    </controls:PlaceholderTextBox>
                </DockPanel>
            </Border>
            <Button x:Name="btnSetting" Grid.Column="1" Margin="0,0,8,0"
                  BorderThickness="0"  HorizontalAlignment="Center" VerticalAlignment="Center" VerticalContentAlignment="Center"
                  Height="28" Width="35" 
                  Style="{StaticResource BtnStandard}"
                  AutomationProperties.Name="{x:Static Properties:Resources.btnHierarchyTreeSettingsAutomationPropertiesName}">
                <i:Interaction.Behaviors>
                    <behaviors:KeyboardToolTipButtonBehavior/>
                    <behaviors:DropDownButtonBehavior/>
                </i:Interaction.Behaviors>
                <Button.ToolTip>
                    <ToolTip Content="{x:Static Properties:Resources.btnSettingToolTip1}"/>
                </Button.ToolTip>
                <controls:FabricIconControl GlyphName="Settings" GlyphSize="Custom" FontSize="12" HorizontalAlignment="Center" VerticalAlignment="Center" Style="{StaticResource hoverAwareFabricIconOnButtonParent}"/>
                <Button.ContextMenu>
                    <ContextMenu FlowDirection="LeftToRight" x:Name="cmHierarchySettings" Style="{StaticResource ctxMenuDefault}">
                        <MenuItem Header="{x:Static Properties:Resources.HierarchyControl_Menu_TreeView}">
                            <cc:ToggleMenuItem x:Name="mniRaw" IsCheckable="False" Click="mniRaw_Click" Style="{StaticResource miBoldOnSelection}"
                                  AutomationProperties.Name="{x:Static Properties:Resources.mniRawAutomationPropertiesName1}">
                                <MenuItem.Header>
                                    <RadioButton x:Name="rbRaw" Content="{x:Static Properties:Resources.HierarchyControl_Raw}" Loaded="mniRaw_Loaded" Click="rbRaw_Click" Focusable="False" />
                                </MenuItem.Header>
                            </cc:ToggleMenuItem>
                            <cc:ToggleMenuItem x:Name="mniControl" IsCheckable="False" Click="mniControl_Click" Style="{StaticResource miBoldOnSelection}"
                                  AutomationProperties.Name="{x:Static Properties:Resources.mniControlAutomationPropertiesName}">
                                <MenuItem.Header>
                                    <RadioButton x:Name="rbControl" Content="{x:Static Properties:Resources.HierarchyControl_Control}" Loaded="mniControl_Loaded" Click="rbControl_Click" Focusable="False" />
                                </MenuItem.Header>
                            </cc:ToggleMenuItem>
                            <cc:ToggleMenuItem x:Name="mniContent" IsCheckable="False" Click="mniContent_Click" Style="{StaticResource miBoldOnSelection}"
                                  AutomationProperties.Name="{x:Static Properties:Resources.mniContentAutomationPropertiesName1}">
                                <MenuItem.Header>
                                    <RadioButton x:Name="rbContent" Content="{x:Static Properties:Resources.HierarchyControl_Content}" Loaded="mniContent_Loaded" Click="rbContent_Click" Focusable="False" />
                                </MenuItem.Header>
                            </cc:ToggleMenuItem>
                        </MenuItem>
                        <MenuItem Header="{x:Static Properties:Resources.HierarchyControl_Menu_ShowAncestry}" x:Name="mniShowAncestry" IsCheckable="True" 
                                  Loaded="mniShowAncestry_Loaded" Click="mniShowAncestry_Click"/>
                        <MenuItem Header="{x:Static Properties:Resources.HierarchyControl_Menu_ShowUncertainResults}" x:Name="mniShowUncertain" IsCheckable="True" 
                                  Click="mniShowUncertain_Click" Loaded="mniShowUncertain_Loaded"/>
                    </ContextMenu>
                </Button.ContextMenu>
            </Button>
        </Grid>
        <Grid ClipToBounds="True"  Grid.Row="3">
            <TreeView x:Name="treeviewHierarchy"
                      ScrollViewer.ScrollChanged="treeviewHierarchy_ScrollChanged"
                      Margin="0,0,2,0" AutomationProperties.AutomationId="{x:Static Properties:AutomationIDs.HierarchyControlUIATreeView}"
                      IsTextSearchEnabled="True" 
                      SelectedItemChanged="treeviewHierarchy_SelectedItemChanged" 
                      AutomationProperties.Name="{x:Static Properties:Resources.HierarchyControl_treeviewHierarchyAutomationName}"
                      FontSize="12" BorderThickness="0"
                      VirtualizingPanel.IsVirtualizing="False"
                      HorizontalContentAlignment="Left"
                      Background="{DynamicResource ResourceKey=PrimaryBGBrush}"
                      Grid.IsSharedSizeScope="True" GotFocus="treeviewHierarchy_GotFocus">
                <TreeView.ItemContainerStyle>
                    <Style TargetType="TreeViewItem" BasedOn="{StaticResource ResourceKey=tviStandard}">
                        <Setter Property="IsExpanded" Value="{Binding Path=IsExpanded, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <Setter Property="Visibility" Value="{Binding Path=Visibility, Mode=OneWay}"/>
                        <Setter Property="IsSelected" Value="{Binding Path=IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <Setter Property="AutomationProperties.Name" Value="{Binding Path=AutomationName, Mode=OneWay}"/>
                        <EventSetter Event="RequestBringIntoView" Handler="TreeViewItem_RequestBringIntoView"/>
                        <EventSetter Event="Selected" Handler="OnSelected"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsLiveMode}" Value="False">
                                <Setter Property="ContextMenu" Value="{StaticResource ExpandDescendantsPopup}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsLiveMode}" Value="True">
                                <Setter Property="ContextMenu" Value="{StaticResource cmLive}"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TreeView.ItemContainerStyle>
                <TreeView.ItemTemplate>
                    <HierarchicalDataTemplate ItemsSource="{Binding Path=Children}">
                        <StackPanel Orientation="Horizontal"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Left">
                            <controls:DualFabricIconControl Name="fabicnError" IconSizeBack="{Binding Path=IconSizeBack, Mode=OneWay}" IconSizeFront="{Binding Path=IconSizeFront, Mode=OneWay}" Visibility="{Binding Path=IconVisibility, Mode=OneWay}" GlyphNameFront="{Binding Path=IconFront}" GlyphNameBack="{Binding Path=IconBack}" Margin="0,2,2,0"/>
                            <TextBlock Text="{Binding Path=Header}" Style="{DynamicResource VarStandardTextBlock}" VerticalAlignment="Center"/>
                        </StackPanel>
                    </HierarchicalDataTemplate>
                </TreeView.ItemTemplate>
            </TreeView>
            <Button Name="btnTestElement" AutomationProperties.Name="{x:Static Properties:Resources.btnTestElementAutomationPropertiesName}"
                    HorizontalAlignment="Right" Width="24" Height="24" Margin="0,18,32,0"
                    VerticalAlignment="Top" Grid.Row="3" Visibility="Collapsed" KeyDown="FloatingButton_KeyDown"
                    BorderThickness="2" BorderBrush="Transparent"
                    AutomationProperties.AutomationId="{x:Static Properties:AutomationIDs.HierarchyControlTestElementButton}">
                <i:Interaction.Behaviors>
                    <behaviors:KeyboardToolTipButtonBehavior/>
                </i:Interaction.Behaviors>
                <Button.Style>
                    <Style TargetType="Button" BasedOn="{StaticResource BtnOnSelectedLine}">
                        <Setter Property="Background" Value="{DynamicResource ResourceKey=SelectedBrush}"/>
                        <Setter Property="Button.ToolTip">
                            <Setter.Value>
                                <ToolTip>Test Element</ToolTip>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Button.Style>
                <controls:FabricIconControl GlyphName="TestBeaker" Foreground="{DynamicResource ResourceKey=TreeViewSelectedFGBrush}" Background="{DynamicResource ResourceKey=SelectedBrush}" GlyphSize="Custom" FontSize="14" Padding="1,1,1,1"/>
            </Button>
            <Button x:Name="btnMenu" Grid.Column="1" Margin="0,18,4,0"
                   HorizontalAlignment="Right" VerticalContentAlignment="Center"
                    VerticalAlignment="Top" Grid.Row="3" Visibility="Collapsed"
                     Height="24" MinWidth="24" KeyDown="FloatingButton_KeyDown"
                     BorderThickness="2" BorderBrush="Transparent"
                  AutomationProperties.Name="{x:Static Properties:Resources.btnMenuAutomationPropertiesName}">
                <i:Interaction.Behaviors>
                    <behaviors:DropDownButtonBehavior/>
                    <behaviors:KeyboardToolTipButtonBehavior/>
                </i:Interaction.Behaviors>
                <controls:FabricIconControl GlyphName="More" GlyphSize="Custom" FontSize="12" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource ResourceKey=TreeViewSelectedFGBrush}" Background="{DynamicResource ResourceKey=SelectedBrush}" Padding="2,2,2,2"/>
                <Button.ToolTip>
                    <ToolTip Content="{x:Static Properties:Resources.SetterValueMoreOptions}"/>
                </Button.ToolTip>
                <Button.Style>
                    <Style TargetType="Button" BasedOn="{StaticResource BtnOnSelectedLine}">
                        <Setter Property="Background" Value="{DynamicResource ResourceKey=SelectedBrush}"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsLiveMode}" Value="False">
                                <Setter Property="ContextMenu" Value="{StaticResource ExpandDescendantsPopup}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsLiveMode}" Value="True">
                                <Setter Property="ContextMenu" Value="{StaticResource cmLive}"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
        </Grid>
        <TextBlock x:Name="tbTimeSpan" Grid.Row="4" VerticalAlignment="Center" AutomationProperties.Name="{x:Static Properties:Resources.tbTimeSpanAutomationPropertiesName}"/>
    </Grid>
</UserControl>
